# ---------- Builder ----------
FROM node:20-alpine AS builder
WORKDIR /workspace
RUN apk add --no-cache python3 make g++ libc6-compat
COPY package*.json ./
RUN --mount=type=cache,target=/root/.npm npm ci --legacy-peer-deps
COPY . .
RUN npx nx build backend

# ---------- Runner ----------
FROM node:20-alpine AS runner
WORKDIR /workspace
ENV NODE_ENV=production
# let npm ignore peer conflicts during install
ENV NPM_CONFIG_LEGACY_PEER_DEPS=true

COPY package*.json ./
# install only production deps
RUN --mount=type=cache,target=/root/.npm npm ci --omit=dev

# bring in compiled app
COPY --from=builder /workspace/dist ./dist

EXPOSE 3000
CMD ["node", "dist/apps/backend/main.js"]
