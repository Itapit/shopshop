x-common-env: &common-env
    NODE_ENV: development
    CHOKIDAR_USEPOLLING: 'true'
    CHOKIDAR_INTERVAL: '200'
    WATCHPACK_POLLING: 'true'
    npm_config_fund: 'false'
    npm_config_audit: 'false'
    npm_config_cache: /home/node/.npm
    NX_TASKS_RUNNER_DYNAMIC_OUTPUT: 'false'
    CI: 'true'

x-common-volumes: &common-volumes
    - ../:/workspace
    - node_modules:/workspace/node_modules
    - nx_cache:/workspace/.nx
    - npm_cache:/home/node/.npm

services:
    fixperms:
        image: busybox
        user: '0:0'
        working_dir: /workspace
        volumes: *common-volumes
        command: >
            sh -lc '
            mkdir -p /home/node/.npm /workspace/node_modules /workspace/.nx &&
            chown -R "${LOCAL_UID:-1000}:${LOCAL_GID:-1000}" /home/node/.npm /workspace/node_modules /workspace/.nx || true
            '

    deps:
        image: node:24.5.0
        working_dir: /workspace
        user: '${LOCAL_UID:-1000}:${LOCAL_GID:-1000}'
        environment:
            <<: *common-env
        command: >
            bash -lc "
              if [ ! -d node_modules ] || [ -z \"$(ls -A node_modules 2>/dev/null)\" ]; then
                echo 'Installing dependencies with --legacy-peer-deps...';
                npm install --legacy-peer-deps;
              else
                echo 'node_modules already present in volume, skipping install.';
              fi
            "
        volumes: *common-volumes
        depends_on:
            fixperms:
                condition: service_completed_successfully

    backend:
        build:
            context: ..
            dockerfile: apps/backend/Dockerfile.dev
        working_dir: /workspace
        user: '${LOCAL_UID:-1000}:${LOCAL_GID:-1000}'
        environment:
            <<: *common-env
        env_file:
            - ../.env
        command: >
            bash -lc "npx nx serve backend"
        depends_on:
            deps:
                condition: service_completed_successfully
        volumes: *common-volumes
        ports:
            - '${BACKEND_PORT:-3000}:3000'
        tty: true
        init: true

    frontend:
        build:
            context: ..
            dockerfile: apps/frontend/Dockerfile.dev
        working_dir: /workspace
        user: '${LOCAL_UID:-1000}:${LOCAL_GID:-1000}'
        environment:
            <<: *common-env
        # Ensure dev server binds to 0.0.0.0 so it's reachable from host.
        command: >
            bash -lc "npx nx serve frontend --host 0.0.0.0"
        depends_on:
            deps:
                condition: service_completed_successfully
            backend:
                condition: service_started
        volumes: *common-volumes
        ports:
            - '${FRONTEND_PORT:-4200}:4200'
        tty: true
        init: true

    workspace:
        image: node:24.5.0
        working_dir: /workspace
        user: '${LOCAL_UID:-1000}:${LOCAL_GID:-1000}'
        environment:
            <<: *common-env
        volumes: *common-volumes
        command: bash -lc "sleep infinity"
        depends_on:
            deps:
                condition: service_completed_successfully

volumes:
    node_modules: {}
    nx_cache: {}
    npm_cache: {}
